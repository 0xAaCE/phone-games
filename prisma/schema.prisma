// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  username     String
  email        String?  @unique
  phoneNumber  String?  @unique @map("phone_number")
  createdAt    DateTime @default(now()) @map("created_at")

  partyPlayers PartyPlayer[]

  @@map("users")
}

model Party {
  id         String      @id @default(cuid())
  partyName  String      @map("party_name")
  gameName   String      @map("game_name")
  status     PartyStatus @default(WAITING)
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")

  players    PartyPlayer[]

  @@map("parties")
}

model PartyPlayer {
  id       String     @id @default(cuid())
  partyId  String     @map("party_id")
  userId   String     @map("user_id")
  role     PlayerRole @default(PLAYER)
  joinedAt DateTime   @default(now()) @map("joined_at")

  party    Party      @relation(fields: [partyId], references: [id], onDelete: Cascade)
  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([partyId, userId])
  @@map("party_players")
}

enum PartyStatus {
  WAITING
  ACTIVE
  FINISHED
}

enum PlayerRole {
  MANAGER
  PLAYER
}
